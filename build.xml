

<project name="Bionic University" default="build">
    <property name="workspace" value="${basedir}"/>
    <property name="sourcedir" value="${basedir}/src"/>
    <property name="builddir" value="${workspace}/app/build"/>

    <target name="build"
            depends="prepare,vendors,lint,phploc,pdepend,phpcpd,phpmd-ci,phpcs-ci,phpunit"/>

    <target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${builddir}/api"/>
        <delete dir="${builddir}/code-browser"/>
        <delete dir="${builddir}/coverage"/>
        <delete dir="${builddir}/logs"/>
        <delete dir="${builddir}/pdepend"/>
        <delete dir="${builddir}/docs/*"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${builddir}/api"/>
        <mkdir dir="${builddir}/code-browser"/>
        <mkdir dir="${builddir}/coverage"/>
        <mkdir dir="${builddir}/logs"/>
        <mkdir dir="${builddir}/pdepend"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>
            <fileset dir="${sourcedir}">
                <include name="**/*.php"/>
                <modified/>
            </fileset>
            <fileset dir="${basedir}/src/">
                <include name="**/*Test.php"/>
                <modified/>
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv"/>
            <arg value="${builddir}/logs/phploc.csv"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${builddir}/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${basedir}/src"/>
            <arg value="text"/>
            <arg value="${workspace}/app/phpmd.xml"/>
        </exec>
    </target>

    <target name="phpmd-ci"
            description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${sourcedir}"/>
            <arg value="xml"/>
            <arg value="${workspace}/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg value="${builddir}/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=Symfony2"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${builddir}/logs/checkstyle.xml"/>
            <arg value="--standard=Symfony2"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd"/>
            <arg value="${builddir}/logs/pmd-cpd.xml"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" failonerror="true">
            <arg value="-c"/>
            <arg path="${basedir}/phpunit.xml"/>
        </exec>
    </target>

    <target name="vendors" description="Update vendors">
        <exec executable="composer" failonerror="true">
            <arg value="update"/>
        </exec>
    </target>

</project>